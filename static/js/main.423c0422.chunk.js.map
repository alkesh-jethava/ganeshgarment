{"version":3,"sources":["Components/Button.js","Components/LogoName.js","Components/TextInput.js","Login/Login.js","Login/ForgotPassword.js","FILE/Dashboard.js","Login/RegisterUser.js","Login/ResetPassword.js","Admin/AdminPanel.js","Admin/AdminLogin.js","App.js","serviceWorker.js","index.js"],"names":["Buttons","style","width","this","props","Button","color","fontWeight","backgroundColor","fullWidth","onClick","type","name","title","React","Component","LogoName","className","TextInput","value","maxLength","onChange","required","lbl","Login","login","state","email","setState","emailerror","password","passworderror","submit","history","push","fetch","method","headers","body","JSON","stringify","then","responseJson","localStorage","setItem","catch","error","console","change","event","target","marginTop","display","justifyContent","to","ForgotPassword","forgotpassword","alert","Dashboard","logout","clear","loggedIn","getItem","componentName","register","username","mobile","cpassword","usernameerror","mobileerror","cpassworderror","placeholder","App","path","component","exact","RegisterUser","ResetPassword","AdminLogin","AdminPanel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.423c0422.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../App.css';\r\n\r\nclass Buttons extends React.Component{\r\n    render(){\r\n        return(\r\n            <div style={{width: this.props.width}}>\r\n                <Button style={{color: '#fff',\r\n                                fontWeight: 'bold',\r\n                                backgroundColor: '#00A86B'}} \r\n                                fullWidth \r\n                                onClick={this.props.onClick}\r\n                                type={this.props.type}\r\n                                name=\"submit\"\r\n                                >\r\n                                {this.props.title}\r\n                </Button>  \r\n            </div>             \r\n        )\r\n    }\r\n}\r\n\r\nexport default Buttons;","import React from 'react';\r\n\r\nclass LogoName extends React.Component{\r\n    render(){\r\n        return(\r\n        <div className=\"top\">\r\n            <p className=\"title\">\r\n                <span style={{color:\"#00A86B\"}}>G</span>ANESH <span  style={{color:\"#00A86B\"}}>G</span>ARMENT</p>\r\n            <hr></hr>\r\n            <p className=\"p\">retailer & wholesaler</p>\r\n        </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport  default LogoName;","import React from 'react';\r\nimport '../CSS/TextInput.css'\r\n\r\nclass TextInput extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"boxinput\">   \r\n                <input type={this.props.type}\r\n                       value={this.props.value}\r\n                       name={this.props.name}\r\n                       maxLength={this.props.maxLength}\r\n                       onChange={this.props.onChange}\r\n                       required\r\n                    //    autoComplete=\"off\"\r\n                    />\r\n                       <label >{this.props.lbl}</label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextInput;","import React from 'react';\r\nimport Buttons from '../Components/Button';\r\nimport LogoName from '../Components/LogoName';\r\nimport TextInput from '../Components/TextInput';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../CSS/Login.css';\r\n\r\nclass Login extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        // const token = localStorage.getItem(\"token\")\r\n\r\n        // let loggedIn = true;\r\n\r\n        // if(token === null)\r\n        // {\r\n        //     loggedIn = false\r\n        // }\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            emailerror: '',\r\n            passworderror: '',\r\n            // loggedIn\r\n        }\r\n    }\r\n\r\n    login = () => \r\n    {  \r\n            if(this.state.email === ''){\r\n                this.setState({\r\n                    emailerror: \"Please Enter Mobile email\"\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    emailerror: \"\"\r\n                })\r\n            }\r\n            if(this.state.password === ''){\r\n                this.setState({\r\n                    passworderror: \"Please Enter Password\"\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    passworderror: \"\"\r\n                })\r\n            }\r\n            if(this.state.email && this.state.password){\r\n                this.submit();\r\n            }\r\n    }\r\n    \r\n    submit = () =>\r\n    {\r\n\r\n        if(this.state.email === 'Admin' && this.state.password === 'Admin')\r\n        {\r\n            this.props.history.push('/AdminLogin')\r\n        }\r\n        else\r\n        {\r\n            fetch('http://localhost/SignUp/login.php', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json', \r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n              .then((responseJson) => {\r\n              localStorage.setItem(\"token\", responseJson)\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    change = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n        if(this.state.email !== ''){\r\n            this.setState({ emailerror: ''})\r\n        }\r\n        else if(this.state.password !== ''){\r\n            this.setState({ passworderror: ''})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        // if(this.state.loggedIn === true)\r\n        // {\r\n        //     return <Redirect to=\"/Dashboard\" />\r\n        // }\r\n        // else\r\n        // {\r\n        return(\r\n            <div className=\"login_container\">\r\n                <div className=\"login_form\">\r\n                    <div className=\"login_logo\">\r\n                    <LogoName/>   \r\n                    </div>\r\n\r\n                    <h3>Sign In</h3>\r\n\r\n                     <form>  \r\n                         <div > \r\n\r\n                            <TextInput type=\"text\"\r\n                                       value={this.state.email}\r\n                                       name=\"email\"\r\n                                       onChange={this.change}\r\n                                       lbl=\"Email\"\r\n                                    \r\n                                       />\r\n                            <p className=\"error\">{this.state.emailerror}</p>\r\n                           \r\n                            <TextInput type=\"password\"\r\n                                       value={this.state.password}\r\n                                       name=\"password\"\r\n                                       onChange={this.change}\r\n                                       lbl=\"Password\"\r\n                                \r\n                                       />\r\n                            <p className=\"error\">{this.state.passworderror}</p>\r\n                           \r\n                            <div style={{marginTop: 10, display: 'flex', justifyContent: 'center'}}>\r\n                                <Buttons title=\"Sign In\" width=\"350px\" onClick={this.login}/>\r\n                            </div>\r\n                            <div style={{marginTop: 10, display: 'flex', justifyContent: 'center'}}>\r\n                                <Buttons title=\"Register\" width=\"350px\" onClick={() =>  this.props.history.push('/RegisterUser')}/>\r\n                            </div>\r\n                        </div> \r\n\r\n                    </form>\r\n                    <div className=\"fp2\">\r\n                       <p  className=\"fp\"> <span> Forgot Password ? <NavLink to=\"/forgotpassword\" className=\"AdminLink\"> Click Here </NavLink></span></p>\r\n                    </div>\r\n\r\n                    {/* <div className=\"AdminDiv\">\r\n                       <p  className=\"fp\"> <span> If You Are Admin <NavLink to=\"/AdminLogin\" className=\"AdminLink\"> Click Here </NavLink></span></p>\r\n                    </div> */}\r\n                    \r\n                </div>\r\n            </div>\r\n          \r\n        )}\r\n                \r\n   }\r\n\r\n\r\nexport default Login;","import React from 'react';\r\nimport LogoName from '../Components/LogoName';\r\nimport TextInput from '../Components/TextInput';\r\nimport Buttons from '../Components/Button';\r\n\r\nclass ForgotPassword extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            email: '',\r\n            emailerror: ''\r\n        }\r\n    }\r\n\r\n    change = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n        if(this.state.email !== '')\r\n        {\r\n            this.setState({\r\n                emailerror: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    forgotpassword = () => {\r\n\r\n        if(this.state.email === '')\r\n        {\r\n            this.setState({\r\n                emailerror: \"Please Enter Email ID\"\r\n            })\r\n        }\r\n        else\r\n        {\r\n            fetch('http://localhost/SignUp/verify_email.php', {\r\n            method: 'POST',\r\n            headers:\r\n            {\r\n                'Accept': 'application/json',\r\n            },                                                                      \r\n            body: JSON.stringify({\r\n                email: this.state.email\r\n            })\r\n        })\r\n           .then((responseJson) => {\r\n               if(responseJson)\r\n               {\r\n                   alert(\"Check Your Email to Reset Your Password\");\r\n               }\r\n               else\r\n               {\r\n                   alert(\"Please Enter Email\");\r\n               }\r\n           }).catch((error) => {\r\n            console.error(error);\r\n        });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"login_container\">\r\n            <div className=\"login_form\">\r\n                <div className=\"login_logo\">\r\n                <LogoName/>   \r\n                </div>\r\n\r\n                <h3>VERIFY EMAIL</h3>\r\n\r\n                 <form>  \r\n                     <div className=\"txtinput\"> \r\n\r\n                        <TextInput type=\"text\"\r\n                                   lbl=\"Enter Email ID\"\r\n                                   value={this.state.email}\r\n                                   name=\"email\"\r\n                                   onChange={this.change}\r\n                                   />\r\n                        <p className=\"error\">{this.state.emailerror}</p>\r\n                       \r\n                        <div style={{marginTop: 10, display: 'flex', justifyContent: 'center'}}>\r\n                            <Buttons title=\"verify\" width=\"350px\" onClick={this.forgotpassword}/>\r\n                        </div>\r\n                       \r\n\r\n                    </div> \r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ForgotPassword;","import React from 'react';\r\nimport Buttons  from '../Components/Button';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        const token = localStorage.getItem(\"login\")\r\n\r\n        let loggedIn = false;\r\n\r\n        if(token === null)\r\n        {\r\n            loggedIn = true\r\n        }\r\n\r\n        this.state = {\r\n            loggedIn\r\n        }\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     fetch('http://localhost/User_Login/select_login.php')\r\n    //         .then((result) => {\r\n    //             this.setState({user: result})\r\n        \r\n    //     })\r\n    // }\r\n\r\n    logout = () => {\r\n        localStorage.clear();\r\n       return this.props.history.push('/')\r\n      }\r\n  \r\n\r\n    render(){\r\n        if(this.state.loggedIn === true){\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n        return(\r\n            <div>\r\n              this is Dashboard<br/><br/>\r\n              <Buttons title=\"logout\" width=\"120px\" onClick={this.logout}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport Buttons from '../Components/Button';\r\nimport TextInput from '../Components/TextInput'\r\n\r\nexport default class componentName extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n            username: '',\r\n            email: '',\r\n            mobile: '',\r\n            password: '',\r\n            cpassword: '',\r\n\r\n            usernameerror: '',\r\n            emailerror: '',\r\n            mobileerror: '',\r\n            passworderror: '',\r\n            cpassworderror: ''\r\n           \r\n        }\r\n    }\r\n\r\n    register = () => {\r\n\r\n        if(this.state.username === '' && this.state.email === '' && this.state.mobile === ''  && this.state.password === '' && this.state.cpassword === '')\r\n        {\r\n            this.setState({\r\n                usernameerror: \"Please Enter Username\",\r\n                emailerror: \"Please Enter Email\",\r\n                mobileerror: \"Please Enter Mobile Number\",\r\n                passworderror: \"Please Enter Password\",\r\n                cpassworderror: \"Please Enter Confirm Password\"\r\n            })   \r\n        }\r\n        else if(this.state.username === '')\r\n        {\r\n            this.setState({\r\n                usernameerror: \"Please Enter Username\"\r\n            })\r\n        }\r\n        else if(this.state.email === '')\r\n        {\r\n            this.setState({\r\n                emailerror: \"Please Enter Email\"\r\n            })\r\n        }\r\n        else if(this.state.mobile === '')\r\n        {\r\n            this.setState({\r\n                mobileerror: \"Please Enter Mobile\"\r\n            })\r\n        }\r\n        else if(this.state.password === '')\r\n        {\r\n            this.setState({\r\n                passworderror: \"Please Enter Password\"\r\n            })\r\n        }\r\n        else if(this.state.cpassword === '')\r\n        {\r\n            this.setState({\r\n                cpassworderror: \"Please Enter Confirm Password\"\r\n            })\r\n        }\r\n        else\r\n        {\r\n\r\n            fetch('http://localhost/SignUp/registration.php',\r\n             {\r\n                method: 'POST',\r\n                headers: \r\n                {\r\n                    'Accept': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify\r\n                ({\r\n                    username: this.state.username,\r\n                    email: this.state.email,\r\n                    mobile: this.state.mobile,\r\n                    password: this.state.password,\r\n                    cpassword: this.state.cpassword,\r\n                })\r\n            })\r\n            .then((responseJson) => \r\n            {\r\n                if(responseJson)\r\n                {\r\n                    alert(\"Check Your Email To Activate Your Account\")\r\n                    this.props.history.push('/')\r\n                }\r\n            }).catch((error) => \r\n            {\r\n                console.error(error);\r\n            });\r\n        }  \r\n    }\r\n\r\n    change = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n        if(this.state.username !== '')\r\n        {\r\n            this.setState({\r\n                usernameerror: \"\"\r\n            })\r\n        }\r\n        if(this.state.email !== '')\r\n        {\r\n            this.setState({\r\n                emailerror: \"\"\r\n            })\r\n        }\r\n        if(this.state.mobile !== '')\r\n        {\r\n            this.setState({\r\n                mobileerror: \"\"\r\n            })\r\n        }\r\n        if(this.state.password !== '')\r\n        {\r\n            this.setState({\r\n                passworderror: \"\"\r\n            })\r\n        }\r\n        if(this.state.cpassword !== '')\r\n        {\r\n            this.setState({\r\n                cpassworderror: \"\"\r\n            })\r\n        } \r\n    }\r\n\r\n  render() {\r\n    return (\r\n        \r\n        <div className=\"login_container\">\r\n        <div className=\"login_form\">\r\n            <h3 style={{marginTop: '70px'}}>Registration</h3>\r\n\r\n             <form style={{marginTop: '50px'}}>  \r\n                 <div  > \r\n\r\n                 <TextInput type=\"text\"\r\n                            value={this.state.username}\r\n                            name=\"username\"\r\n                            onChange={this.change}\r\n                            lbl=\"Full Name\"/>\r\n                            <p className=\"error\">{this.state.usernameerror}</p>\r\n\r\n                <TextInput type=\"text\" \r\n                            value={this.state.email}\r\n                            name=\"email\"\r\n                            onChange={this.change}\r\n                            lbl=\"Email Address\"/>   \r\n                             <p className=\"error\">{this.state.emailerror}</p>\r\n\r\n                 <TextInput type=\"text\"\r\n                            value={this.state.mobile}\r\n                            name=\"mobile\"\r\n                            onChange={this.change}\r\n                            lbl=\"Mobile Number\"/>\r\n                             <p className=\"error\">{this.state.mobileerror}</p>\r\n\r\n                <TextInput type=\"text\"\r\n                            value={this.state.password}\r\n                            name=\"password\"\r\n                            onChange={this.change}\r\n                            lbl=\"Password\"/>       \r\n                             <p className=\"error\">{this.state.passworderror}</p>\r\n\r\n                <TextInput type=\"text\"\r\n                            value={this.state.cpassword}\r\n                            name=\"cpassword\"\r\n                            onChange={this.change}\r\n                            lbl=\"Confirm Password\"/>  \r\n                             <p className=\"error\">{this.state.cpassworderror}</p>\r\n                                        \r\n                    <div style={{marginTop: 10, display: 'flex', justifyContent: 'center'}}>\r\n                        <Buttons title=\"Create Account\" width=\"350px\" onClick={this.register}/>\r\n                    </div>\r\n                </div> \r\n            </form>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport LogoName from '../Components/LogoName';\r\nimport Buttons from '../Components/Button';\r\nimport TextInput from '../Components/TextInput'\r\nimport { Redirect } from 'react-router-dom';\r\n// import { Redirect } from 'react-router-dom';\r\n\r\nexport default class componentName extends Component {\r\n      constructor(props){\r\n        super(props);\r\n\r\n        const token = localStorage.getItem(\"login\")\r\n\r\n        let loggedIn = true;\r\n\r\n        if(token === null)\r\n        {\r\n            loggedIn = false\r\n        }\r\n        this.state = {\r\n            password: '',\r\n            cpassword: '',\r\n            passworderror: '',\r\n            cpassworderror: '',\r\n            loggedIn\r\n        }\r\n    }\r\n\r\n    register = () => {\r\n\r\n        if(this.state.password === '' && this.state.cpassword === '')\r\n        {\r\n            this.setState({\r\n                passworderror: \"Please Enter Password\",\r\n                cpassworderror: \"Please Enter Confirm Password\"\r\n            })\r\n        }\r\n        else if(this.state.password === '')\r\n        {\r\n            this.setState({\r\n                passworderror: \"Please Enter PAssword\"\r\n            })\r\n        }\r\n        else if(this.state.cpassword === '')\r\n        {\r\n            this.setState({\r\n                cpassworderror: \"Please Enter Confirm Password\"\r\n            })\r\n        }\r\n        else\r\n        {\r\n            fetch('http://localhost/SignUp/reset_password.php', {\r\n                method: 'POST',   \r\n               \r\n                headers: {\r\n                 \r\n                    'Accept': 'application/json',\r\n                    \r\n                },\r\n                body: JSON.stringify({\r\n                    password: this.state.password,\r\n                    cpassword: this.state.cpassword,\r\n                })\r\n            })\r\n              .then(responseJson => {\r\n               if(responseJson){\r\n                   alert(\"Password Reset Successfully\")\r\n                   this.props.history.push('/')\r\n               }\r\n              }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    change = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n         if(this.state.password !== '')\r\n        {\r\n            this.setState({\r\n                passworderror: \"\"\r\n            })\r\n        }\r\n         if(this.state.cpassword !== '')\r\n        {\r\n            this.setState({\r\n                cpassworderror: \"\"\r\n            })\r\n        }\r\n\r\n       \r\n    }\r\n\r\n\r\n  render() {    \r\n      if(this.state.loggedIn === false)\r\n      {\r\n          return <Redirect to=\"/\"></Redirect>\r\n      }\r\n    return (\r\n        \r\n        <div className=\"login_container\">\r\n        <div className=\"login_form\">\r\n            <div className=\"login_logo\">\r\n            <LogoName/>   \r\n            </div>\r\n\r\n            <h3 className=\"a1\" style={{marginTop: '140px'}}>Reset Password</h3>\r\n\r\n             <form>  \r\n                 <div className=\"txtinput\" style={{marginTop: '70px', }}> \r\n\r\n\r\n               \r\n                <TextInput type=\"text\"\r\n                            value={this.state.password}\r\n                            name=\"password\"\r\n                            onChange={this.change}\r\n                            lbl=\"New Password\"/>     \r\n                            <p className=\"error\">{this.state.passworderror}</p>  \r\n\r\n                <TextInput type=\"text\"\r\n                            placeholder=\"confirm password\" \r\n                            value={this.state.cpassword}\r\n                            name=\"cpassword\"\r\n                            onChange={this.change}\r\n                            lbl=\"Confirm Password\"/>  \r\n                             <p className=\"error\">{this.state.cpassworderror}</p>    \r\n                   \r\n                    <div style={{marginTop: 10,display: 'flex', justifyContent: 'center'}}>\r\n                        <Buttons title=\"Create Password\" width=\"350px\" onClick={this.register}/>\r\n                    </div>\r\n    \r\n                </div> \r\n            </form>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class componentName extends Component {\r\n  render() {\r\n    return (\r\n      <div> textInComponent </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class componentName extends Component {\r\n  render() {\r\n    return (\r\n      <div> textInComponent </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport Login from './Login/Login';\nimport ForgotPassword from './Login/ForgotPassword';\nimport Dashboard from './FILE/Dashboard';\nimport RegisterUser from './Login/RegisterUser';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport ResetPassword from './Login/ResetPassword';\nimport AdminPanel from './Admin/AdminPanel';\nimport AdminLogin from './Admin/AdminLogin';\n\nexport default class App extends React.Component{\n  render(){\n    return(\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/\" component={Login} exact/>\n            <Route path=\"/Dashboard\" component={Dashboard} />\n            <Route path=\"/RegisterUser\" component={RegisterUser} />\n\n            <Route path=\"/forgotpassword\" component={ForgotPassword}/>\n            <Route path=\"/ResetPassword\" component={ResetPassword}/>\n\n            <Route path=\"/AdminLogin\" component={AdminLogin}/>\n            <Route path=\"/AdminPanel\" component={AdminPanel}/>\n            \n          </Switch>\n        </BrowserRouter>\n    )\n  }\n} ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}